A.

Вставка числа
Требуется вставить в данный массив на данное место данный элемент, сдвинув остальные элементы вправо.

Входные данные

В первой строке вводится одно натуральное число, не превосходящее 1000 – размер массива. Во второй строке задаются 
n чисел – элементы массива (целые числа, не превосходящие по модулю 1000). 
В третьей строке вводится число, которое необходимо вставить, и номер места, на которое его нужно вставить.

Выходные данные

Вывести получившийся массив.

B.

Сортировка вставками
Требуется отсортировать массив по неубыванию методом "вставок".

Входные данные

В первой строке вводится одно натуральное число, не превосходящее 1000 – размер массива. Во второй строке задаются 
n чисел – элементы массива (целые числа, не превосходящие по модулю 1000).

Выходные данные

Вывести получившийся массив.

C.

Экспедиция
Месклиниты собрались в экспедицию на край света. У них есть корабль, состоящий из n×m плотов, связанных между собой. 
У каждого плота есть своя грузоподъемность, а у каждого месклинита – своя масса. На каждом плотике может находиться не более одного месклинита. 
Если грузоподъемность выбранного плотика меньше массы месклинита, то бедный месклинит утонет при посадке.

Руководитель экспедиции продумывает рассадку по плотикам. Помогите ему определить, какому максимальному количеству месклинитов удастся отправиться в путь.

Входные данные

В первой строке даны числа n и m (1≤n,m≤40). В каждой из последующих n строк содержится по m чисел, обозначающих грузоподъемность соответствующего плотика. В (
n+2)-ой строке находится число k (1≤k≤2000) – количество месклинитов. В (n+3)-ей строке содержатся k чисел, i-ое из которых – масса 
i-ого месклинита. Все массы месклинитов и грузоподъемности плотиков – натуральные числа, не превышающие 10^9.

Выходные данные

Требуется вывести одно число – максимально возможное количество участников экспедиции.

D.

Библиотечный метод
Продемонстрируйте работу метода сортировки вставками по возрастанию. Для этого выведите состояние данного массива после каждой вставки на отдельных строках. Если массив упорядочен изначально, то следует не выводить ничего.

Входные данные

На первой строке дано число (1≤n≤100) – количество элементов в массиве. На второй строке задан сам массив: последовательность натуральных чисел, не превышающих 10^9.

Выходные данные

В выходной файл выведите строки (по количеству вставок) по N чисел каждая.

E.

Результаты олимпиады
Во время проведения олимпиады каждый из участников получил свой идентификационный номер – натуральное число.
Необходимо отсортировать список участников олимпиады по количеству набранных ими баллов.

Входные данные

На первой строке дано число n (1≤n≤1000) – количество участников. На каждой следующей строке даны идентификационный номер
и набранное число баллов соответствующего участника. Все числа во входном файле не превышают 10^5.

Выходные данные

В выходной файл выведите исходный список в порядке убывания баллов. Если у некоторых участников одинаковые баллы, 
то их между собой нужно упорядочить в порядке возрастания идентификационного номера.

F.

Сортировка слиянием
Отсортируйте данный массив, используя сортировку слиянием.

Входные данные

Первая строка входных данных содержит число n – количество элементов в массиве. (1≤n≤10^5). Далее идет n целых чисел, не превосходящих по абсолютной величине 10^9. 


Выходные данные

Выведите эти числа в порядке неубывания.

G.

Похожие массивы
Назовем два массива похожими, если они состоят из одних и тех же элементов (без учета кратности). По двум данным массивам выясните, похожие они или нет.

Входные данные

В первой строке содержится число n (1≤n≤10^5) – размер первого массива. Во второй строке идет n целых чисел, не превосходящих по модулю 10^9 – элементы массива. 
Далее аналогично задается второй массив.

Выходные данные

Программа должна вывести слово YES, если массивы похожи, и слово NO в противном случае.

H.

Забор
Как известно, красить забор Тому Сойеру помогали многочисленные друзья. Каждый друг покрасил неcколько подряд идущих досок, при этом какие-то доски могли быть покрашены несколько раз, а какие-то доски могли остаться непокрашенными. Определите общее количество покрашенных досок.

Входные данные

В первой строке содержится натуральное число n – количество друзей Тома Сойера (1≤n≤10^5). Далее идет n пар целых неотрицательных чисел – номер (от начала забора)
доски, с которой друг начал красить забор и номер доски, на которой он закончил покраску. Каждый друг покрасил непрерывный участок забора, включая две заданные доски.
Номера досок – целые числа от 1 до 10^9. 

Выходные данные

Программа должна вывести единственное число – суммарное количество покрашенных досок.

I.

Быстрая сортировка
Отсортируйте данный массив, используя быструю сортировку.

Входные данные

Первая строка входных данных содержит число n – количество элементов в массиве. (1≤n≤10^5). Далее идет n целых чисел, не превосходящих по абсолютной величине 10^9. 

Выходные данные

Выведите эти числа в порядке неубывания.

J.

Анти-QuickSort
Для сортировки последовательности чисел широко используется быстрая сортировка - QuickSort.

Хотя QuickSort является самой быстрой сортировкой в среднем, существуют тесты, на которых она работает очень долго.

Требуется написать программу, генерирующую тест, на котором быстрая сортировка сделает наибольшее число таких сравнений.

Входные данные

В первой строке находится единственное число n (1≤n≤70000).

Выходные данные

Вывести перестановку чисел от 1 до n, на которой быстрая сортировка выполнит максимальное число сравнений. Если таких перестановок несколько, вывести любую из них.

K.

K-ая порядковая статистика
Дан массив из n элементов. Какое число k-ое в порядке возрастания в этом массиве?

Входные данные

В этой задаче элементы массива не заданы во входных данных в явном виде – вам нужно сгенерировать их с помощью алгоритма, описанного ниже.

В первой строке содержатся два числа n и k - размер массива и номер искомого элемента (1≤k≤n≤3⋅10^7). Во второй строке находятся числа A,B,C,a1,a2, 
по модулю не превосходящие 10^9. 

Вы должны получить элементы массива начиная с третьего по формуле: a[i] = A * a[i-2] + B * a[i-1] + C. 
Все вычисления должны производится в 32-битном знаковом типе, переполнения должны игнорироваться.

Выходные данные

Выведите k-ое в порядке возрастания число в массиве a.
